sudo: required

services:
  - docker

language: node_js
node_js:
  - 8

stages:
  - build
  - test
  - name: deploy
    if: branch = master

jobs:
  include:

    # backend
    - stage: build
      install:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

        # install aws
        - pip install --user awscli
        - export PATH=$PATH:$HOME/.local/bin
        - aws configure set default.region eu-central-1

        # get credentials
        - aws s3 cp s3://tsmean-credentials/production."$PROD_CREDENTIALS".properties.json backend/properties/production.properties.json
        - ls backend/properties

        ## build
        - docker build -t tsmean/server:"$TRAVIS_BUILD_NUMBER" -f docker/server.dockerfile .
        - docker push tsmean/server:"$TRAVIS_BUILD_NUMBER"
      script: echo "everything a ok with backend build"

    - stage: test
      script: echo "no backend tests yet"

    - stage: deploy
      install: echo "no deployment yet"
        ## deploy
#        - aws ssm describe-instance-information
#        - echo $TRAVIS_BRANCH
#        - aws ssm send-command --instance-ids "i-0ed7d2d2191c0c2d5" --document-name "AWS-RunShellScript" --parameters commands=["export TRAVIS_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER && wget --no-cache https://raw.githubusercontent.com/tsmean/tsmean/"$TRAVIS_BRANCH"/docker/docker-compose.yml && docker stack deploy --compose-file docker-compose.yml tsmean && rm docker-compose.yml"] > docker/last-command.json
#        - node docker/wait-for-aws-ssm.js

      script: echo "no deployment yet"

    # frontend
    - stage: build
      install:
        ## build
        - cd shared
        - npm install
        - cd ../frontend
        - npm install
        - npm run build:prod
        - cd ..
      script: echo "everything ok with frontend build"

    - stage: test
      script: echo "no frontend tests yet"

    - stage: deploy
      install: echo "no frontend deployment yet"
#        ## deploy
#        ## frontend
#        - aws configure set preview.cloudfront true
#        - aws s3 cp frontend/dist s3://demo.tsmean.com/ --recursive
#        - aws cloudfront create-invalidation --distribution-id E194UGLQ78RUJV --paths "/*"
      script: echo "no frontend deployment yet"





